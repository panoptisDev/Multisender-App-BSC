{
  "version": 3,
  "names": [
    "_react",
    "_interopRequireWildcard3",
    "require",
    "_codemirror",
    "_interopRequireDefault",
    "_jsxRuntime",
    "defaultOptions",
    "tabSize",
    "autoCloseBrackets",
    "matchBrackets",
    "showCursorWhenSelecting",
    "lineNumbers",
    "fullScreen",
    "ReactCodeMirror",
    "props",
    "arguments",
    "length",
    "undefined",
    "ref",
    "_props$options",
    "options",
    "_props$value",
    "value",
    "_props$width",
    "width",
    "_props$height",
    "height",
    "_props$lazyLoadMode",
    "lazyLoadMode",
    "_useState",
    "useState",
    "_useState2",
    "_slicedToArray2",
    "default",
    "editor",
    "setEditor",
    "textareaRef",
    "useRef",
    "lastestProps",
    "useImperativeHandle",
    "textarea",
    "current",
    "getEventHandleFromProps",
    "propNames",
    "Object",
    "keys",
    "eventHandle",
    "filter",
    "keyName",
    "test",
    "eventDict",
    "forEach",
    "ele",
    "name",
    "slice",
    "replace",
    "toLowerCase",
    "setOptions",
    "_x",
    "_setOptions",
    "apply",
    "_asyncToGenerator2",
    "_regeneratorRuntime2",
    "mark",
    "_callee",
    "instance",
    "opt",
    "mode",
    "_args",
    "wrap",
    "_callee$",
    "_context",
    "prev",
    "next",
    "_typeof2",
    "window",
    "CodeMirror",
    "findModeByName",
    "specifier",
    "Promise",
    "r",
    "then",
    "s",
    "_interopRequireWildcard2",
    "concat",
    "mime",
    "JSON",
    "stringify",
    "setOption",
    "stop",
    "useEffect",
    "fromTextArea",
    "_objectSpread2",
    "event",
    "on",
    "_lastestProps$current",
    "setValue",
    "setSize",
    "toTextArea",
    "useMemo",
    "val",
    "getValue",
    "jsx",
    "children",
    "_default",
    "React",
    "forwardRef",
    "exports",
    "module"
  ],
  "sources": [
    "../src/index.js"
  ],
  "sourcesContent": [
    "import React, { useRef, useEffect, useImperativeHandle, useState, useMemo } from 'react';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/meta';\nimport './codemirror.css';\n\nconst defaultOptions = {\n  tabSize: 2,\n  autoCloseBrackets: true,\n  matchBrackets: true,\n  showCursorWhenSelecting: true,\n  // 显示行号\n  lineNumbers: true,\n  fullScreen: true,\n}\n\nfunction ReactCodeMirror(props = {}, ref) {\n  const { options = {}, value = '', width = '100%', height = '100%', lazyLoadMode = true } = props;\n  const [editor, setEditor] = useState();\n  const textareaRef = useRef();\n  const lastestProps = useRef(props);\n\n  useImperativeHandle(ref, () => ({ editor, textarea: textareaRef.current }), [editor, textareaRef]);\n  lastestProps.current = props;\n  \n  // 将props中所有的事件处理函数映射并保存\n  function getEventHandleFromProps() {\n    const propNames = Object.keys(props);\n    const eventHandle = propNames.filter((keyName) => {\n      return /^on+/.test(keyName);\n    });\n\n    const eventDict = {};\n    eventHandle.forEach((ele) => {\n      const name = ele.slice(2);\n      if (name && name[0]) {\n        eventDict[ele] = name.replace(name[0], name[0].toLowerCase());\n      }\n    });\n\n    return eventDict;\n  }\n\n  // http://codemirror.net/doc/manual.html#config\n  async function setOptions(instance, opt = {}) {\n    if (typeof opt === 'object' && window) {\n      const mode = CodeMirror.findModeByName(opt.mode || '');\n      if (lazyLoadMode && mode && mode.mode) {\n        await import(`codemirror/mode/${mode.mode}/${mode.mode}.js`);\n      }\n      if (mode) {\n        opt.mode = mode.mime;\n      }\n      Object.keys(opt).forEach((name) => {\n        if ((opt[name] || opt[name] === false) && JSON.stringify(opt[name])) {\n          instance.setOption(name, opt[name]);\n        }\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (!editor && window) {\n      // 生成codemirror实例\n      const instance = CodeMirror.fromTextArea(textareaRef.current, {...defaultOptions, ...options});\n      const eventDict = getEventHandleFromProps();\n      Object.keys(eventDict).forEach((event) => {\n        instance.on(eventDict[event], (...params) => lastestProps.current[event](...params));\n      });\n      instance.setValue(value || '');\n\n      if (width || height) {\n        // 设置尺寸\n        instance.setSize(width, height);\n      }\n      setEditor(instance);\n      setOptions(instance, {...defaultOptions, ...options});\n    }\n    return () => {\n      if (editor && window) {\n        editor.toTextArea();\n        setEditor(undefined);\n      }\n    }\n  }, []);\n\n  useMemo(() => {\n    if (!editor || !window) return;\n    const val = editor.getValue();\n    if (value !== undefined && value !== val) {\n      editor.setValue(value);\n    }\n  }, [value]);\n\n  useMemo(() => {\n    if (!editor || !window) return;\n    editor.setSize(width, height);\n  }, [width, height]);\n\n\n  useMemo(() => {\n    if (!editor || !window) return;\n    setOptions(editor, {...defaultOptions, ...options});\n  }, [editor, options]);\n  \n  return (\n    <textarea ref={textareaRef}>{value}</textarea>\n  );\n}\n\nexport default React.forwardRef(ReactCodeMirror);\n"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,wBAAA,CAAAC,OAAA;AACA,IAAAC,WAAA,GAAAC,sBAAA,CAAAF,OAAA;AACAA,OAAA;AAA8B,IAAAG,WAAA,GAAAH,OAAA;AAG9B,IAAMI,cAAc,GAAG;EACrBC,OAAO,EAAE,CAAC;EACVC,iBAAiB,EAAE,IAAI;EACvBC,aAAa,EAAE,IAAI;EACnBC,uBAAuB,EAAE,IAAI;EAC7B;EACAC,WAAW,EAAE,IAAI;EACjBC,UAAU,EAAE;AACd,CAAC;AAED,SAASC,eAAeA,CAAA,EAAkB;EAAA,IAAjBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAAEG,GAAG,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtC,IAAAE,cAAA,GAA2FL,KAAK,CAAxFM,OAAO;IAAPA,OAAO,GAAAD,cAAA,cAAG,CAAC,CAAC,GAAAA,cAAA;IAAAE,YAAA,GAAuEP,KAAK,CAA1EQ,KAAK;IAALA,KAAK,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,YAAA,GAA2DT,KAAK,CAA9DU,KAAK;IAALA,KAAK,GAAAD,YAAA,cAAG,MAAM,GAAAA,YAAA;IAAAE,aAAA,GAA2CX,KAAK,CAA9CY,MAAM;IAANA,MAAM,GAAAD,aAAA,cAAG,MAAM,GAAAA,aAAA;IAAAE,mBAAA,GAA0Bb,KAAK,CAA7Bc,YAAY;IAAZA,YAAY,GAAAD,mBAAA,cAAG,IAAI,GAAAA,mBAAA;EACtF,IAAAE,SAAA,GAA4B,IAAAC,eAAQ,GAAE;IAAAC,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAA/BK,MAAM,GAAAH,UAAA;IAAEI,SAAS,GAAAJ,UAAA;EACxB,IAAMK,WAAW,GAAG,IAAAC,aAAM,GAAE;EAC5B,IAAMC,YAAY,GAAG,IAAAD,aAAM,EAACvB,KAAK,CAAC;EAElC,IAAAyB,0BAAmB,EAACrB,GAAG,EAAE;IAAA,OAAO;MAAEgB,MAAM,EAANA,MAAM;MAAEM,QAAQ,EAAEJ,WAAW,CAACK;IAAQ,CAAC;EAAA,CAAC,EAAE,CAACP,MAAM,EAAEE,WAAW,CAAC,CAAC;EAClGE,YAAY,CAACG,OAAO,GAAG3B,KAAK;;EAE5B;EACA,SAAS4B,uBAAuBA,CAAA,EAAG;IACjC,IAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAAC/B,KAAK,CAAC;IACpC,IAAMgC,WAAW,GAAGH,SAAS,CAACI,MAAM,CAAC,UAACC,OAAO,EAAK;MAChD,OAAO,MAAM,CAACC,IAAI,CAACD,OAAO,CAAC;IAC7B,CAAC,CAAC;IAEF,IAAME,SAAS,GAAG,CAAC,CAAC;IACpBJ,WAAW,CAACK,OAAO,CAAC,UAACC,GAAG,EAAK;MAC3B,IAAMC,IAAI,GAAGD,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC;MACzB,IAAID,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,EAAE;QACnBH,SAAS,CAACE,GAAG,CAAC,GAAGC,IAAI,CAACE,OAAO,CAACF,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAACG,WAAW,EAAE,CAAC;MAC/D;IACF,CAAC,CAAC;IAEF,OAAON,SAAS;EAClB;;EAEA;EAAA,SACeO,UAAUA,CAAAC,EAAA;IAAA,OAAAC,WAAA,CAAAC,KAAA,OAAA7C,SAAA;EAAA;EAAA,SAAA4C,YAAA;IAAAA,WAAA,OAAAE,kBAAA,CAAA5B,OAAA,oBAAA6B,oBAAA,CAAA7B,OAAA,IAAA8B,IAAA,CAAzB,SAAAC,QAA0BC,QAAQ;MAAA,IAAAC,GAAA;QAAAC,IAAA;QAAAC,KAAA,GAAArD,SAAA;MAAA,WAAA+C,oBAAA,CAAA7B,OAAA,IAAAoC,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAEP,GAAG,GAAAE,KAAA,CAAApD,MAAA,QAAAoD,KAAA,QAAAnD,SAAA,GAAAmD,KAAA,MAAG,CAAC,CAAC;YAAA,MACtC,IAAAM,QAAA,CAAAzC,OAAA,EAAOiC,GAAG,MAAK,QAAQ,IAAIS,MAAM;cAAAJ,QAAA,CAAAE,IAAA;cAAA;YAAA;YAC7BN,IAAI,GAAGS,mBAAU,CAACC,cAAc,CAACX,GAAG,CAACC,IAAI,IAAI,EAAE,CAAC;YAAA,MAClDvC,YAAY,IAAIuC,IAAI,IAAIA,IAAI,CAACA,IAAI;cAAAI,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,iBAAAK,SAAA;cAAA,WAAAC,OAAA,WAAAC,CAAA;gBAAA,OAAAA,CAAA,CAAAF,SAAA;cAAA,GAAAG,IAAA,WAAAC,CAAA;gBAAA,WAAAC,wBAAA,CAAAlD,OAAA,EAAA/B,OAAA,CAAAgF,CAAA;cAAA;YAAA,qBAAAE,MAAA,CACHjB,IAAI,CAACA,IAAI,OAAAiB,MAAA,CAAIjB,IAAI,CAACA,IAAI;UAAA;YAExD,IAAIA,IAAI,EAAE;cACRD,GAAG,CAACC,IAAI,GAAGA,IAAI,CAACkB,IAAI;YACtB;YACAzC,MAAM,CAACC,IAAI,CAACqB,GAAG,CAAC,CAACf,OAAO,CAAC,UAACE,IAAI,EAAK;cACjC,IAAI,CAACa,GAAG,CAACb,IAAI,CAAC,IAAIa,GAAG,CAACb,IAAI,CAAC,KAAK,KAAK,KAAKiC,IAAI,CAACC,SAAS,CAACrB,GAAG,CAACb,IAAI,CAAC,CAAC,EAAE;gBACnEY,QAAQ,CAACuB,SAAS,CAACnC,IAAI,EAAEa,GAAG,CAACb,IAAI,CAAC,CAAC;cACrC;YACF,CAAC,CAAC;UAAC;UAAA;YAAA,OAAAkB,QAAA,CAAAkB,IAAA;QAAA;MAAA,GAAAzB,OAAA;IAAA,CAEN;IAAA,OAAAL,WAAA,CAAAC,KAAA,OAAA7C,SAAA;EAAA;EAED,IAAA2E,gBAAS,EAAC,YAAM;IACd,IAAI,CAACxD,MAAM,IAAIyC,MAAM,EAAE;MACrB;MACA,IAAMV,QAAQ,GAAGW,mBAAU,CAACe,YAAY,CAACvD,WAAW,CAACK,OAAO,MAAAmD,cAAA,CAAA3D,OAAA,MAAA2D,cAAA,CAAA3D,OAAA,MAAM3B,cAAc,GAAKc,OAAO,EAAE;MAC9F,IAAM8B,SAAS,GAAGR,uBAAuB,EAAE;MAC3CE,MAAM,CAACC,IAAI,CAACK,SAAS,CAAC,CAACC,OAAO,CAAC,UAAC0C,KAAK,EAAK;QACxC5B,QAAQ,CAAC6B,EAAE,CAAC5C,SAAS,CAAC2C,KAAK,CAAC,EAAE;UAAA,IAAAE,qBAAA;UAAA,OAAe,CAAAA,qBAAA,GAAAzD,YAAY,CAACG,OAAO,EAACoD,KAAK,CAAC,CAAAjC,KAAA,CAAAmC,qBAAA,EAAAhF,SAAA,CAAW;QAAA,EAAC;MACtF,CAAC,CAAC;MACFkD,QAAQ,CAAC+B,QAAQ,CAAC1E,KAAK,IAAI,EAAE,CAAC;MAE9B,IAAIE,KAAK,IAAIE,MAAM,EAAE;QACnB;QACAuC,QAAQ,CAACgC,OAAO,CAACzE,KAAK,EAAEE,MAAM,CAAC;MACjC;MACAS,SAAS,CAAC8B,QAAQ,CAAC;MACnBR,UAAU,CAACQ,QAAQ,MAAA2B,cAAA,CAAA3D,OAAA,MAAA2D,cAAA,CAAA3D,OAAA,MAAM3B,cAAc,GAAKc,OAAO,EAAE;IACvD;IACA,OAAO,YAAM;MACX,IAAIc,MAAM,IAAIyC,MAAM,EAAE;QACpBzC,MAAM,CAACgE,UAAU,EAAE;QACnB/D,SAAS,CAAClB,SAAS,CAAC;MACtB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAAkF,cAAO,EAAC,YAAM;IACZ,IAAI,CAACjE,MAAM,IAAI,CAACyC,MAAM,EAAE;IACxB,IAAMyB,GAAG,GAAGlE,MAAM,CAACmE,QAAQ,EAAE;IAC7B,IAAI/E,KAAK,KAAKL,SAAS,IAAIK,KAAK,KAAK8E,GAAG,EAAE;MACxClE,MAAM,CAAC8D,QAAQ,CAAC1E,KAAK,CAAC;IACxB;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,IAAA6E,cAAO,EAAC,YAAM;IACZ,IAAI,CAACjE,MAAM,IAAI,CAACyC,MAAM,EAAE;IACxBzC,MAAM,CAAC+D,OAAO,CAACzE,KAAK,EAAEE,MAAM,CAAC;EAC/B,CAAC,EAAE,CAACF,KAAK,EAAEE,MAAM,CAAC,CAAC;EAGnB,IAAAyE,cAAO,EAAC,YAAM;IACZ,IAAI,CAACjE,MAAM,IAAI,CAACyC,MAAM,EAAE;IACxBlB,UAAU,CAACvB,MAAM,MAAA0D,cAAA,CAAA3D,OAAA,MAAA2D,cAAA,CAAA3D,OAAA,MAAM3B,cAAc,GAAKc,OAAO,EAAE;EACrD,CAAC,EAAE,CAACc,MAAM,EAAEd,OAAO,CAAC,CAAC;EAErB,oBACE,IAAAf,WAAA,CAAAiG,GAAA;IAAUpF,GAAG,EAAEkB,WAAY;IAAAmE,QAAA,EAAEjF;EAAK,EAAY;AAElD;AAAC,IAAAkF,QAAA,gBAEcC,cAAK,CAACC,UAAU,CAAC7F,eAAe,CAAC;AAAA8F,OAAA,CAAA1E,OAAA,GAAAuE,QAAA;AAAAI,MAAA,CAAAD,OAAA,GAAAA,OAAA,CAAA1E,OAAA"
}